Обзор subscription_service

subscription_service — это микросервис, отвечающий за управление подписками пользователей. Он предоставляет RESTful API для создания, получения, обновления и удаления подписок, а также формирования ленты новостей на основе подписок.

Этот микросервис является частью распределённой архитектуры и взаимодействует с другими сервисами (например, auth_service, posts_service, admin_service) через API и, при необходимости, через брокер сообщений (RabbitMQ).

Основной функционал:
- Подписки
  - Создание подписки на других пользователей
  - Отписка от пользователей
  - Получение списка всех подписок пользователя

- Лента новостей
  - Формирование ленты новостей для пользователя на основе его подписок
  - Получение всех постов, опубликованных пользователями, на которых подписан текущий пользователь

Технологии:
- FastAPI — web-фреймворк для создания REST API
- SQLAlchemy — ORM для работы с базой данных
- PostgreSQL / SQLite — база данных (в зависимости от окружения)
- Pydantic — для валидации данных
- Alembic — для управления миграциями (если используется)
- Docker — контейнеризация сервиса (по желанию)

Установка и запуск:

1. Клонируйте репозиторий:

git clone https://github.com/Tatiana-Iuranova/Chatty_Microservices.git
cd Chatty_Microservices/subscription_service

2. Установите зависимости:

python -m venv venv
source venv/bin/activate  # Для Windows: venv\Scripts ctivate
pip install -r requirements.txt

3. Настройте переменные окружения:
Создайте файл .env.local в корне subscription_service и добавьте необходимые параметры:

DB_HOST=subscription_db
DB_PORT=5432
DB_NAME=subscription_db
DB_USER=postgres
DB_PASSWORD=postgres
DEBUG=True

4. Запустите сервис:

uvicorn main:app --reload

Эндпоинты API:
subscription_service предоставляет следующие эндпоинты:

Подписки:
Метод  |  URL                        | Описание
-------------------------------------------------
GET    | /subscriptions/             | Получить список всех подписок
GET    | /subscriptions/{user_id}    | Получить подписки пользователя
POST   | /subscriptions/             | Создать новую подписку
DELETE | /subscriptions/{user_id}    | Отписаться от пользователя

Лента новостей:
Метод  |  URL                        | Описание
-------------------------------------------------
GET    | /newsfeed/{user_id}         | Получить ленту новостей для пользователя

Для работы этих эндпоинтов предполагается передача user_id в теле запроса или через токен.

Завершение:
Теперь, когда вы настроили и запустили subscription_service, вы можете интегрировать его с другими микросервисами системы, такими как posts_service для формирования ленты новостей и управления подписками.
