
Обзор auth_service

auth_service — это микросервис, предназначенный для управления аутентификацией и авторизацией пользователей в системе. Он предоставляет RESTful API для регистрации пользователей, входа в систему, управления сессиями и работы с токенами.

Этот микросервис является частью распределённой архитектуры и взаимодействует с другими сервисами (например, posts_service, subscription_service, admin_service) через API и, при необходимости, через брокер сообщений (RabbitMQ).

Основной функционал:
- Регистрация пользователей
  - Создание нового пользователя в системе
  - Валидация данных пользователя при регистрации

- Вход в систему
  - Авторизация пользователя с использованием логина и пароля
  - Генерация JWT токенов для дальнейшего использования

- Управление сессиями
  - Проверка действительности токенов
  - Обновление токенов по мере необходимости

- Восстановление пароля
  - Сброс пароля через email
  - Отправка ссылки для восстановления пароля

Технологии:
- FastAPI — web-фреймворк для создания REST API
- SQLAlchemy — ORM для работы с базой данных
- PostgreSQL / SQLite — база данных (в зависимости от окружения)
- Pydantic — для валидации данных
- JWT (JSON Web Tokens) — для аутентификации и авторизации
- Docker — контейнеризация сервиса (по желанию)

Установка и запуск:

1. Клонируйте репозиторий:

git clone https://github.com/Tatiana-Iuranova/Chatty_Microservices.git
cd Chatty_Microservices/auth_service

2. Установите зависимости:

python -m venv venv
source venv/bin/activate  # Для Windows: venv\Scripts ctivate
pip install -r requirements.txt

3. Настройте переменные окружения:
Создайте файл .env.local в корне auth_service и добавьте необходимые параметры:

DB_HOST=auth_db
DB_PORT=5432
DB_NAME=auth_db
DB_USER=postgres
DB_PASSWORD=postgres
SECRET_KEY=your-secret-key
DEBUG=True

4. Запустите сервис:

uvicorn main:app --reload

Эндпоинты API:
auth_service предоставляет следующие эндпоинты:

Регистрация пользователей:
Метод  |  URL            | Описание
---------------------------------------------------------
POST   | /register      | Регистрация нового пользователя

Вход в систему:
Метод  |  URL            | Описание
---------------------------------------------------------
POST   | /login         | Авторизация пользователя

Восстановление пароля:
Метод  |  URL            | Описание
---------------------------------------------------------
POST   | /password-reset | Запрос на восстановление пароля

Управление сессиями:
Метод  |  URL            | Описание
---------------------------------------------------------
POST   | /token/refresh | Обновление JWT токена

Завершение:
Теперь, когда вы настроили и запустили auth_service, вы можете использовать его для управления аутентификацией и авторизацией пользователей в вашей системе.
