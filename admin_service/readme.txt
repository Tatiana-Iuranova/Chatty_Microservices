
Обзор admin_service

admin_service — это микросервис, предназначенный для управления административными функциями системы. Он предоставляет RESTful API для выполнения различных административных задач, таких как управление пользователями, просмотр статистики системы и настройка параметров сервисов.

Этот микросервис является частью распределённой архитектуры и взаимодействует с другими сервисами (например, auth_service, posts_service, subscription_service) через API и, при необходимости, через брокер сообщений (RabbitMQ).

Основной функционал:
- Управление пользователями
  - Создание новых пользователей
  - Удаление пользователей
  - Просмотр информации о пользователях
  - Обновление информации о пользователях

- Статистика системы
  - Получение статистики по количеству постов, комментариев и подписок
  - Просмотр активных пользователей и их активности

- Настройки сервисов
  - Управление настройками сервисов и их параметрами
  - Обновление конфигураций системы

Технологии:
- FastAPI — web-фреймворк для создания REST API
- SQLAlchemy — ORM для работы с базой данных
- PostgreSQL / SQLite — база данных (в зависимости от окружения)
- Pydantic — для валидации данных
- Alembic — для управления миграциями (если используется)
- Docker — контейнеризация сервиса (по желанию)

Установка и запуск:

1. Клонируйте репозиторий:

git clone https://github.com/Tatiana-Iuranova/Chatty_Microservices.git
cd Chatty_Microservices/admin_service

2. Установите зависимости:

python -m venv venv
source venv/bin/activate  # Для Windows: venv\Scripts ctivate
pip install -r requirements.txt

3. Настройте переменные окружения:
Создайте файл .env.local в корне admin_service и добавьте необходимые параметры:

DB_HOST=admin_db
DB_PORT=5432
DB_NAME=admin_db
DB_USER=postgres
DB_PASSWORD=postgres
DEBUG=True

4. Запустите сервис:

uvicorn main:app --reload

Эндпоинты API:
admin_service предоставляет следующие эндпоинты:

Управление пользователями:
Метод  |  URL                          | Описание
---------------------------------------------------------
GET    | /users/                      | Получить список всех пользователей
GET    | /users/{user_id}             | Получить информацию о пользователе
POST   | /users/                      | Создать нового пользователя
PUT    | /users/{user_id}             | Обновить информацию о пользователе
DELETE | /users/{user_id}             | Удалить пользователя

Статистика системы:
Метод  |  URL                          | Описание
---------------------------------------------------------
GET    | /stats/posts                 | Получить статистику по постам
GET    | /stats/comments              | Получить статистику по комментариям
GET    | /stats/subscriptions         | Получить статистику по подпискам
GET    | /stats/active-users          | Получить список активных пользователей

Настройки сервисов:
Метод  |  URL                          | Описание
---------------------------------------------------------
GET    | /settings/{service}           | Получить настройки сервиса
PUT    | /settings/{service}           | Обновить настройки сервиса

Завершение:
Теперь, когда вы настроили и запустили admin_service, вы можете использовать его для администрирования и управления системой, включая пользователей, статистику и настройки.
